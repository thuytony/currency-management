services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: currency-postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/db-init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - currency-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot Backend
  backend:
    build:
      context: .
      dockerfile: ./docker/backend.Dockerfile
    container_name: currency-backend
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/currency_db
      SPRING_DATASOURCE_USERNAME: currency_user
      SPRING_DATASOURCE_PASSWORD: currency_password
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - currency-network
    restart: unless-stopped

  # React Web Frontend
  web:
    build:
      context: .
      dockerfile: ./docker/web.Dockerfile
    container_name: currency-web
    ports:
      - "5173:5173"
    environment:
      - VITE_API_BASE_URL=http://localhost:8080
    depends_on:
      - backend
    networks:
      - currency-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  currency-network:
    driver: bridge 